{
  "pengenalan-html": {
    "title": "Pengenalan HTML",
    "subjectUri": "pengenalan-html",
    "slides": [
      {
        "title": "Pengenalan HTML",
        "content": [""]
      },
      {
        "title": "Pengertian HTML",
        "content": [
          "HTML = HyperText Markup Language",
          "=> Analogi: Tubuh Manusia dan tulang",
          "=> HTML adalah representasi struktur web"
        ]
      },
      {
        "title": "Unsur Penyusun Sebuah Web",
        "content": ["- HTML", "- CSS", "- JavaScript"]
      },
      {
        "title": "Unsur Penyusun sebuah Web (ii)",
        "content": [
          "HTML => Sebagai tulang yang merepresentasikan struktur halaman web",
          "CSS => Sebagai representasi kosmetik, aksesoris a.k.a penampilan dari web",
          "JavaScript => Sebagai motor penggerak dari HTML dan CSS a.k.a pengatur interaktifitas sebuah web"
        ]
      },
      {
        "title": "Kenapa harus dari HTML?",
        "content": [
          "- HTML adalah dasar dari segala dasar pemrograman web. Fundamental tidak boleh dilewati",
          "- Gerbang awal sebelum masuk ke dalam CSS dan JavaScript, khususnya DOM",
          "- React JS pun pada akhirnya akan ada unsur tag HTML di dalamnya."
        ]
      },
      {
        "title": "Yuk lihat kode",
        "content": ["Struktur HTML Sederhana"],
        "image": "/assets/image/html/img-html-1.png"
      },
      {
        "title": "Yuk lihat kode (ii)",
        "content": [
          "Anatomi kode HTML yang dibuat",
          "- tipe dokumen (si html itu sendiri)",
          "- judul dokumen (si <title>)",
          "- konten dokumen (si <body>) yang memiliki 2 elemen:",
          "* heading dengan tulisan Halo Developer",
          "- paragraf dengan tulisan Mari ngoprek HTML"
        ]
      },
      {
        "title": "Yuk lihat kode (iii)",
        "content": [
          "Cara membaca sebuah tag html",
          "",
          "<a href='https://www.google.com'>Google</a>",
          "<a> adalah tag pembuka",
          "href='https://www.google.com' adalah atribut (kiri adalah nama, kanan adalah value)",
          "Google adalah konten",
          "</a> adalah tag penutup"
        ]
      },
      {
        "title": "Tag HTML yang umum digunakan",
        "content": [
          "<DOCTYPE html> Tag untuk Deklarasi dokumen",
          "<html> Tag untuk untuk memulai dokumen",
          "<head> Tag untuk mengatur bagian atas dokumen",
          "<body> Tag untuk mengatur bagian konten dokumen",
          "<h1> - <h6> Tag untuk membuat heading",
          "<p> Tag untuk membuat paragraf",
          "<br> Tag untuk membuat baris baru"
        ]
      },
      {
        "title": "Tag HTML yang umum digunakan (ii)",
        "content": [
          "<a> Tag untuk membuat link",
          "<img> Tag untuk untuk membuat gambar",
          "<ul> Tag untuk membuat daftar tidak terurut",
          "<ol> Tag untuk membuat daftar terurut",
          "<li> Tag untuk membuat daftar item",
          "<table> Tag untuk membuat table",
          "<tr> Tag untuk membuat baris table",
          "<td> Tag untuk membuat kolom table"
        ]
      },
      {
        "title": "Tag HTML yang umum digunakan (iii)",
        "content": [
          "<span> Tag untuk memperbantu styling text",
          "<div> Tag untuk untuk membuat divider",
          "<header> Tag untuk membuat bagian atas",
          "<nav> Tag untuk membuat navigasi",
          "<footer> Tag untuk membuat bagian bawah",
          "<table> Tag untuk membuat table",
          "<section> Tag untuk membuat bagian konten"
        ]
      },
      {
        "title": "Tools yang digunakan",
        "content": [
          "Sebelum kita masuk ke sesi ngoing",
          "Kenalan tools dulu yah",
          "Tools apakah yang digunakan dalam pembelajaran ini ???"
        ]
      },
      {
        "title": "Tools yang digunakan (ii)",
        "content": [
          "-Quiziz",
          "-Git",
          "-Github",
          "-Visual Studio Code",
          "-NodeJS"
        ]
      },
      {
        "title": "Ayokk NgodingðŸŽŠðŸŽŠ",
        "content": [
          "-Membuka Visual Studio Code (VSCode)",
          "-Membuat sebuah file baru dengan nama index.html",
          "-Mengetik kode yang ada di halaman selanjutnya",
          "-Jalankan dan lihat !"
        ]
      },
      {
        "title": "Ayokk Ngoding(ii)",
        "content": [""],
        "image": "/assets/image/html/img-html-2.png"
      },
      {
        "title": "Ayokk Ngoding(iii)",
        "content": [""],
        "image": "/assets/image/html/img-html-3.png"
      },
      {
        "title": "Ayokk Ngoding(iv)",
        "content": [""],
        "image": "/assets/image/html/img-html-4.png"
      },
      {
        "title": "Ayokk Ngoding(v)",
        "content": [
          "Males ngetik?",
          "Jadi developer ga boleh males ngetiknya yah!",
          "Tapi kalau mau dilihat hasil jadinya bisa lihat di sini"
        ],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/1.)%20HTML/index.html"
      },
      {
        "title": "Ayokk Ngoding(vi)",
        "content": [
          "Terlalu gampang???",
          "Coba tantangan ini",
          "Load imagenya dari folder lokal bernama /public/images/",
          "Pisah bagian profil dan bagian hobi ke dalam 2 file HTML yang terpisah, dan gabungkan ke dalam index.html ini",
          "(Hint: gunakan <a>)"
        ]
      },
      {
        "title": "Ayokk Coba tag lain",
        "content": [
          "Buat sebuah file baru dengan nama index-2.html",
          "Tambahkan kode HTML di bawah ini ke dalam file tersebut",
          "Load imagenya dari folder lokal bernama /public/images/",
          "Pisah bagian profil dan bagian hobi ke dalam 2 file HTML yang terpisah, dan gabungkan ke dalam index.html ini",
          "(Hint: gunakan <a>)"
        ]
      },
      {
        "title": "Ayokk Coba tag lain(ii)",
        "content": [""],
        "image": "/assets/image/html/img-html-5.png"
      },
      {
        "title": "Ayokk Coba tag lain(iii)",
        "content": [""],
        "image": "/assets/image/html/img-html-6.png"
      },
      {
        "title": "Ayokk Coba tag lain(iv)",
        "content": [""],
        "image": "/assets/image/html/img-html-7.png"
      },
      {
        "title": "Ayokk Coba tag lain(v)",
        "content": ["Ketinggalan yak ?", "Bisa liat di bawah sini yaa"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/1.)%20HTML/index-2.html"
      },
      {
        "title": "SelesaiðŸŽŠðŸŽŠðŸŽŠ",
        "content": [
          "QnA Time!",
          "Silahkan kalian tanyain yaa terkait HTML ini, Pertanyaan apapun pasti dijawab:))"
        ]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "26-10-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "pengenalan-css": {
    "title": "Pengenalan CSS",
    "subjectUri": "pengenalan-css",
    "slides": [
      {
        "title": "Pengenalan CSS",
        "content": [""]
      },
      {
        "title": "Pengertian CSS",
        "content": [
          "CSS = Cascading Style Sheet",
          "Terpakai untuk apa ?",
          "Bosan kan dengan tampilan web yang seperti ini?"
        ]
      },
      {
        "title": "CSS",
        "content": [
          "Pengatur tampilan di dalam HTML",
          "Tampilan apa saja?",
          "-Jarak elemen (padding, margin)",
          "-Posisi elemen (absolute, relative, flex, grid)",
          "-Warna elemen (background-color, color, border-color)",
          "Ukuran dan ketebalan elemen (width, height, font-size, font-weight)",
          "transisi dan animasi",
          "Dsb...."
        ]
      },
      {
        "title": "CSS(ii)",
        "content": [
          "Sebelum memahami attribute yang tadiâ€¦",
          "Kita akan mempelajari terlebih dahulu tentang",
          "-Cara menuliskan CSS",
          "-Box Model"
        ]
      },
      {
        "title": "CSS(iii)",
        "content": [
          "Penulisan CSS - Inline",
          "Menuliskan CSS langsung di dalam tag html"
        ],
        "image": "/assets/image/css/img-css-1.png"
      },
      {
        "title": "Penulisan CSS - Inline (Demo)",
        "content": ["Kode dapat dilihat pada tautan di bawah"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/2.)%20CSS/index.html"
      },
      {
        "title": "Penulisan CSS - Internal",
        "content": ["Menuliskan CSS di dalam tag style di HTML"],
        "image": "/assets/image/css/img-css-2.png"
      },
      {
        "title": "Penulisan CSS - Internal (demo)",
        "content": ["Kode dapat dilihat pada tautan di bawah"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/2.)%20CSS/index-2.html"
      },
      {
        "title": "Penulisan CSS - External",
        "content": ["Menuliskan CSS di luar file HTML"],
        "image": "/assets/image/css/img-css-3.png"
      },
      {
        "title": "Penulisan CSS - External (demo)",
        "content": ["Kode dapat dilihat pada tautan di bawah"],
        "url": "https://github.com/ridhorayputraa/ngajar/tree/master/2.)%20CSS/css-external"
      },
      {
        "title": "CSS - Box Model",
        "content": [
          "Semua yang ditampilkan oleh CSS adalah sebuah box",
          "Mempelajari box model bekerja adalah fundamental dari CSS.",
          "Yuk kita lihat contoh kode HTML dengan sedikit CSS di halaman berikut"
        ]
      },
      {
        "title": "CSS - Box Model(ii)",
        "content": [""],
        "image": "/assets/image/css/img-css-4.png"
      },
      {
        "title": "CSS - Box Model (iii)",
        "content": ["Kode dapat dilihat pada tautan di bawah"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/2.)%20CSS/index-3.html"
      },
      {
        "title": "CSS - Box Model(iv)",
        "content": ["Konsep Box Model"],
        "image": "/assets/image/css/img-css-5.png"
      },
      {
        "title": "CSS - Box Model(v)",
        "content": [
          "QUICK QUIZZ !",
          "Berapakah total width dari code css sebelumnya ?",
          "A. 140px",
          "B. 100px",
          "C. 142px",
          "D. 120px",
          "E. Au ah, pusing jawabnya"
        ]
      },
      {
        "title": "CSS - Box Model(vi)",
        "content": ["Penjelasan !", "-", "-"]
      },
      {
        "title": "CSS - Ukuran Absolut dan Relatif",
        "content": [
          "Contoh: PX = ukuran Absolute",
          "em, rem, vw, % = Ukuran Relative"
        ]
      },
      {
        "title": "CSS - Ukuran Absolut dan Relatif(ii)",
        "content": [
          "Absolute",
          "-Ukurannya sama, apapun parentnya, atau apapun ukuran layarnya",
          "-Lebih mudah digunakan, tapiâ€¦ tidak responsif",
          "Relative",
          "-Berguna untuk desain website responsif",
          "-Ukuran bisa berubah relatif terhadap parent atau ukuran layar",
          "-Lebih sulit digunakan"
        ]
      },
      {
        "title": "CSS - Ukuran Absolut dan Relatif(iii)",
        "content": [
          "Macam ukuran Relatif",
          "% - Ukurannya relatif terhadap elemen parent",
          "em - Ukurannya relatif terhadap font-size elemen saat ini",
          "rem - Ukurannya relatif terhadap font-size root elemen (root em)",
          "vh - Ukurannya relatif terhadap tinggi viewport (ukuran jendela browser). 1vh = 1/100 dari tinggi viewport",
          "vw - Ukurannya relatif terhadap lebar dari viewport. 1vw = 1/100 dari lebar viewport",
          "vmin - Ukurannya relatif terhadap ukuran viewport yang lebih kecil (tergantung orientasi portrait atau landscape)",
          "vmax - Sama dengan vmin, hanya tergantung orientasi yang lebih besar"
        ]
      },
      {
        "title": "CSS - Selektor",
        "content": [
          "CSS - Selektor",
          "Nah sekarang kita sudah belajar bagaimana ukurannya dan peletakkan posisinya",
          "Sekarang kita punya kasus baru",
          "Misalnya sekarang kita memiliki 2 elemen <div>, satu ingin diberikan warna background #4285F4 dan yang satu lagi ingin diberikan warna #34A853",
          "Bagaimana memilah kedua <div> tersebut?"
        ]
      },
      {
        "title": "CSS - Selektor (Coming soon)",
        "content": [
          "Kalo udah tau jawabannya keren! kalo belum, besok kita bahas ya",
          "Besok (Minggu - 27 Oktober 2024) kita akan membahas:",
          "-Css Selector",
          "-Css Layouting",
          "Pasti abis ini langsung bisa bikin web yang ganteng:))"
        ]
      }
    ],
    "schedule": [
      {
        "day": "Minggu",
        "date": "27-10-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "css-selector-layouting": {
    "title": "Css Selector dan layouting",
    "subjectUri": "css-selector-layouting",
    "slides": [
      {
        "title": "Css Selector dan layouting",
        "content": [""]
      },
      {
        "title": "CSS - Selektor",
        "content": [
          "Cara memilih elemen di dalam CSS",
          "-tag HTML (elemen)",
          "class",
          "id",
          "pengelompokkan (grouping)",
          "kombinasi (combinator)",
          "attribute",
          "pseudo",
          "universal"
        ]
      },
      {
        "title": "CSS - Selektor - tag HTML",
        "content": [
          "Memilih elemen dengan tag HTML secara langsung",
          "Contoh Kasus"
        ],
        "image": "/assets/image/css-selector/img-css-selector-1.png"
      },
      {
        "title": "CSS - Selektor - tag HTML(ii)",
        "content": ["Supaya lebih jelas mari kita lihat dengan kode ini"],
        "url": "https://github.com/ridhorayputraa/ngajar/tree/master/3.)%20CSS%20Selector%20%26%20Layouting"
      },
      {
        "title": "CSS - Selektor - Class",
        "content": [
          "Memilih elemen dengan atribut class di dalam elemen html",
          "Contoh CSS"
        ],
        "image": "/assets/image/css-selector/img-css-selector-2.png"
      },
      {
        "title": "CSS - Selektor - id",
        "content": [
          "Memilih elemen dengan atribut id di dalam elemen html",
          "Contoh CSS"
        ],
        "image": "/assets/image/css-selector/img-css-selector-3.png"
      },
      {
        "title": "CSS - Selektor - id(ii)",
        "content": [
          "Terlihat mirip dengan class yah",
          "Namun di sini class ada perbedaan dengan id:",
          "id adalah atribut unik di dalam html, tidak boleh ada elemen lain dengan nama id yang sama (hanya bisa digunakan terhadap satu elemen di html)",
          "class adalah atribut yang tidak di dalam html, boleh ada elemen lain dengan nama class yang sama (bisa digunakan berkali kali)",
          "[!] Selalu pilih menggunakan class daripada id di dalam css apabila memungkinkan"
        ]
      },
      {
        "title": "CSS - Selektor - Grouping",
        "content": [
          "Selektor grouping akan mengelompokkan semua elemen html dengan definisi yang sama.",
          "digunakan untuk menulis kode yang lebih rapih dan tidak berulang"
        ]
      },
      {
        "title": "CSS - Selektor - Grouping (ii)",
        "content": [
          "Contoh kasus",
          "Ingin mengelompokkan h1 dan p agar memiliki teks di tengah tengah"
        ],
        "image": "/assets/image/css-selector/img-css-selector-4.png"
      },
      {
        "title": "Praktik Baik penggunaan CSS",
        "content": [
          "Gunakan class sebisa mungkin, jangan gunakan id apabila memungkinkan",
          "Hindari penggunaan !important , gunakan specificity CSS ( scoring prioritas pada CSS )",
          "Pada css, Posisi menentukan prestasi, hati hati !",
          "Bacaan mengenai CSS specificity"
        ],
        "url": "https://css-tricks.com/specifics-on-css-specificity/"
      },
      {
        "title": "Praktik Baik penggunaan CSS(ii)",
        "content": ["Bacaan mengenai CSS specificity", "Visualisasi"],
        "url": "http://specifishity.com/"
      },
      {
        "title": "CSS - Tata Letak - layouting",
        "content": ["Pakai apa tuh?", "-Menggunakan flex", "Menggunakan grid"]
      },
      {
        "title": "Layouting dengan flex",
        "content": ["Kode layout dengan flex"],
        "url": "https://github.com/ridhorayputraa/ngajar/tree/master/3.)%20CSS%20Selector%20%26%20Layouting/layouting"
      },
      {
        "title": "Layouting dengan flex(ii)",
        "content": [
          "Kesimpulan",
          "-Flexbox lebih fleksibel",
          "-Flexbox menghasilkan css yang lebih kompleks",
          "-[!] ada pengembangan dari Flexbox lagi yang bernama grid",
          "[!] grid memiliki konfigurasi awal yang sedikit lebih kompleks daripada flex"
        ]
      },
      {
        "title": "Layouting dengan flex (iii)",
        "content": ["Referensi", "Flex"],
        "url": "https://css-tricks.com/snippets/css/a-guide-to-flexbox/"
      }
    ],
    "schedule": [
      {
        "day": "Senin",
        "date": "28-10-2024",
        "time": "20:00 - 21:00"
      }
    ]
  },
  "pengenalan-javascript": {
    "title": "Pengenalan JavaScript",
    "subjectUri": "pengenalan-javascript",
    "slides": [
      {
        "title": "Pengenalan JavaScript",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": ["-Instalasi NodeJs", "-Yuk Kenalan sama Javascript"]
      },
      {
        "title": "Instalasi NodeJs",
        "content": [
          "-Pilih versi LTS !",
          "-Sesuaikan dengan Sistem Operasi yang digunakan"
        ],
        "url": "https://nodejs.org/en/download/package-manager"
      },
      {
        "title": "Algoritma(ii)",
        "content": [""],
        "image": "/assets/image/js-pengenalan/image-js-1.png"
      },
      {
        "title": "Algoritma(iii)",
        "content": ["Mari Bermain"],
        "url": "https://www.google.com/logos/2017/logo17/logo17.html"
      },
      {
        "title": "Yuk kenalan sama JavaScript",
        "content": ["-Variabel", "-Tipe Data", "-Operator", "-Alur Kontrol"]
      },
      {
        "title": "Variabel",
        "content": [
          "Sesuatu yang menyimpan suatu nilai, yang bisa diganti nantinya."
        ]
      },
      {
        "title": "Variabel(ii)",
        "content": [
          "Umumnya dideklarasikan dengan cara:",
          "-cara 1: var",
          "-cara 2: let",
          "-cara 3: const",
          "Bedanya apa???"
        ]
      },
      {
        "title": "Variabel(iii)",
        "content": [
          "Umumnya dideklarasikan dengan cara:",
          "-var adalah cara penulisan lama, sebaiknya dihindari",
          "-let digunakan untuk variabel yang BOLEH diubah nantinya",
          "-const (constant) digunakan untuk variabel yang TIDAK BOLEH diubah nantinya"
        ]
      },
      {
        "title": "Variabel(iv)",
        "content": ["Mari kita liat contoh kode di bawah ini"],
        "image": "/assets/image/js-pengenalan/image-js-2.png"
      },
      {
        "title": "Variabel(v)",
        "content": ["Apakah hasil dari potongan kode di bawah ini?"],
        "image": "/assets/image/js-pengenalan/image-js-3.png"
      },
      {
        "title": "Tipe Data",
        "content": [
          "Primitif",
          "-Boolean",
          "-Null",
          "-Undefined",
          "-Number",
          "-String",
          "-Objek"
        ]
      },
      {
        "title": "Tipe Data(ii)",
        "content": [
          "Boolean",
          "Tipe data benar atau salah (true / false)",
          "Number",
          "Tipe data untuk angka (1, 3.14)",
          "String",
          "Tipe data untuk tulisan ('halo', 'dunia')"
        ]
      },
      {
        "title": "Tipe Data(iii)",
        "content": [
          "Null",
          "Tipe data yang menyatakan kosong",
          "Undefined",
          "Tipe data untuk variabel yang sudah ada, tapi belum di-assign, belum ditetapkan"
        ]
      },
      {
        "title": "Tipe data dinamis",
        "content": [
          "JavaScript menganut tipe data yang dinamis",
          "(tipe data dalam variabel boleh diganti kapanpun)"
        ],
        "image": "/assets/image/js-pengenalan/image-js-4.png"
      },
      {
        "title": "Operator",
        "content": ["Operator Aritmatika", "Operator Relasi", "Operator Logika"]
      },
      {
        "title": "Operator Aritmatika",
        "content": ["Operator yang berhubungan dengan perhitungan matematika"],
        "image": "/assets/image/js-pengenalan/image-js-5.png"
      },
      {
        "title": "Operator Relasi",
        "content": ["Operator yang berhubungan dengan relasi antar variabel"],
        "image": "/assets/image/js-pengenalan/image-js-6.png"
      },
      {
        "title": "Operator Relasi(ii)",
        "content": ["Operator yang berhubungan dengan relasi antar variabel"],
        "image": "/assets/image/js-pengenalan/image-js-7.png"
      },
      {
        "title": "Operator Logika",
        "content": [
          "Operator yang berhubungan dengan Gerbang Logika (AND / OR)"
        ],
        "image": "/assets/image/js-pengenalan/image-js-8.png"
      },
      {
        "title": "Selesai :)",
        "content": [""]
      }
    ],

    "schedule": [
      {
        "day": "Sabtu",
        "date": "2-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "pengenalan-git": {
    "title": "Pengenalan Git",
    "subjectUri": "pengenalan-git",
    "slides": [
      {
        "title": "Pengenalan Git & Linux Command",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": ["-CLI", "-Linux Command", "-Git", "-Github"]
      },
      {
        "title": "CLI",
        "content": [
          "Command Line Interface (CLI) adalah sebuah tampilan antarmuka yang dinavigasikan dengan menuliskan perintah, bukan dengan menggunakan gestur mouse / tampilan GUI."
        ]
      },
      {
        "title": "Tipe- tipe CLI",
        "content": ["-CMD", "-PowerShell", "-Bash"]
      },
      {
        "title": "Git",
        "content": [
          "-Tool yang sering digunakan dalam pengembangan perangkat lunak",
          "-Wajib dikuasai oleh programmer zaman kekinian"
        ]
      },
      {
        "title": "Manfaat Git",
        "content": [
          "-Mesin waktu dari kode yang dituliskan di dalam folder (repository)",
          "-Menyimpan riwayat perubahan file dalam bentuk sejumlah commit, bahkan bisa melihat dilakukan oleh siapa dan kapan",
          "-Bisa membuat cabang dari fitur kode yang akan dibuat, tanpa perlu dilakukan di tempat utama yang kita miliki, disebut dengan istilah branch"
        ]
      },
      {
        "title": "Github",
        "content": [
          "-Sebuah layanan komputasi awan untuk menyimpan & mengelola repositori git",
          "-Diakuisisi oleh Microsoft pada tahun 2018",
          "-Bisa menaruh unlimited proyek yang bersifat publik maupun privat"
        ]
      },
      {
        "title": "Istilah dalam Git",
        "content": [
          "-Repository -> Folder project kita berada",
          "-remote -> sumber lain yang memiliki repo, di luar komputer kita",
          "-clone -> mengambil repo dari sumber remote",
          "-commit -> menyimpan / merekam (snapshot) kode dari repo",
          "branch -> cabang dari sebuah commit",
          "checkout -> proses untuk berpindah dari satu commit / satu cabang ke commit / cabang lainnya",
          "merge -> proses untuk menggabungkan branch",
          "push -> mengirimkan commit ke repo (Biasanya remote repo)",
          "pull -> mengambil commit dari repo (biasanya remote repo)"
        ]
      },
      {
        "title": "Demo",
        "content": ["Mari kita praktek"]
      }
    ],
    "schedule": [
      {
        "day": "Senin",
        "date": "4-11-2024",
        "time": "20:00 - 21:30"
      }
    ]
  },
  "javascript-struktur-data": {
    "title": "Javascript Struktur Data",
    "subjectUri": "javascript-struktur-data",
    "slides": [
      {
        "title": "Javascript Struktur Data",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": [
          "-Apa itu struktur data",
          "-Yuk kenalan dengan struktur data di JS",
          "*Array",
          "*Object",
          "*Map dan Set"
        ]
      },
      {
        "title": "Struktur Data?",
        "content": [
          "-Teknik untuk menyimpan dan organisir data",
          "-Mempermudah untuk modifikasi, navigasi, dan akses data yang diinginkan",
          "-Digunakan hampir di seluruh area komputer sains dan pemrograman"
        ]
      },
      {
        "title": "Manfaat Struktur Data",
        "content": [
          "-Mengatur dan menggunakan data yang cukup banyak",
          "-Mencari data dari basis data yang ada",
          "-Mempermudah dan Mempercepat proses data"
        ]
      },
      {
        "title": "Intinya Struktur Data",
        "content": ["Tipe Data tingkat tinggi (non-primitif) di dalam JS"]
      },
      {
        "title": "Array",
        "content": [
          "Struktur data yang memperbolehkan kita menyimpan koleksi berbagai nilai di bawah bendera satu variabel",
          "Ukuran-nya bisa secara dinamis bertambah atau berkurang, sesuai keperluan",
          "Hanya di JSKarena menganut tipe data dinamis, Array bisa berisi kumpulan tipe data lainnya"
        ]
      },
      {
        "title": "Array(ii)",
        "content": [
          "Cara aksesnya dengan menggunakan index, suatu urutan angka, yang dimulai dari 0 (nol)",
          "Memiliki beberapa fungsi bawaan yang bisa mempermudah developer dalam mengakses dan memodifikasi array yang dibuat"
        ]
      },
      {
        "title": "Visualisasi & Penulisan Array",
        "content": [""],
        "image": "/assets/image/js-struktur-data/image-strukdat-1.png"
      },
      {
        "title": "Array 2 Dimensi (Nested Array)",
        "content": [""],
        "image": "/assets/image/js-struktur-data/image-strukdat-2.png"
      },
      {
        "title": "Tantangan: Array",
        "content": [
          "Buat array yang memiliki data sebagai berikut",
          "-Guru -> Andre, Bima, Charles",
          "-Murid -> Dodit, Echa, Fina",
          "-Sekuriti -> Gareng Hilmi Ina"
        ]
      },
      {
        "title": "Object",
        "content": [
          "Sebuah tipe data dalam js yang menyimpan data dengan pasangan kunci : nilai (pair-key value)",
          "Mirip dengan array, hanya saja mengakses datanya bukan lewat index, tapi melalui properties",
          "Cocok untuk menyimpan data yang terstruktur, yang merepresentasikan objek di dunia nyata"
        ]
      },
      {
        "title": "Cara Penulisan Object",
        "content": [""],
        "image": "/assets/image/js-struktur-data/image-strukdat-3.png"
      },
      {
        "title": "Kenyataan Dunia yang Pahit",
        "content": [
          "Umumnya data memang dibuat dalam bentuk array dan object",
          "Hanya saja akan sangat umum menemukan data GABUNGAN keduanya (beserta gabungan data primitif lainnya)"
        ],
        "image": "/assets/image/js-struktur-data/image-strukdat-3.png"
      },
      {
        "title": "Contoh data Gabungan",
        "content": [
          "Data di bawah merupakan gabungan array dengan object yah !"
        ],
        "image": "/assets/image/js-struktur-data/image-strukdat-4.png"
      },
      {
        "title": "Map dan Set",
        "content": [
          "Sampai sekarang kita mengetahui beberapa hal:",
          "-Object digunakan untuk menyimpan koleksi data yang memiliki pasangan kunci dan nilai",
          "-Array digunakan untuk menyimpan koleksi data yang memiliki urutan, berdasarkan index"
        ]
      },
      {
        "title": "Penggunaan Map",
        "content": [""],
        "image": "/assets/image/js-struktur-data/image-strukdat-5.png"
      },
      {
        "title": "Set",
        "content": [
          "-Merupakan koleksi data yang spesial",
          "-kumpulan dari data (tanpa ada kunci), dimana untuk setiap data hanya boleh muncul sekali saja (unik)"
        ]
      },
      {
        "title": "Penggunaan Set",
        "content": [""],
        "image": "/assets/image/js-struktur-data/image-strukdat-6.png"
      },
      {
        "title": "Selesaii",
        "content": ["Silahkan Tugas nya di kerjakan yahhh"]
      }
    ],
    "schedule": [
      {
        "day": "Rabu",
        "date": "6-11-2024",
        "time": "20:00 - 21:00"
      }
    ]
  },
  "javascript-alur-logika": {
    "title": "JavaScript - Alur Logika",
    "subjectUri": "javascript-alur-logika",
    "slides": [
      {
        "title": "JavaScript - Alur Logika",
        "content": [
          "-Pernyataan Kondisional",
          "-Truthy x Falsy",
          "Iterasi dan Perulangan"
        ]
      },
      {
        "title": "Pernyataan Kondisional",
        "content": [
          "-Tidak hanya kita yang bisa memilih, kode pun bisa memilih!",
          "-Pemilihan dilakukan berdasarkan suatu input yang diberikan",
          "-Contoh: Kalau sedang main game, bila pemain nyawanya 0, maka akan 'Game Over'",
          "Bagaimanakah cara dev mengoding pernyataan di atas?"
        ]
      },
      {
        "title": "Pernyataan Kondisional (ii)",
        "content": [
          "Kumpulan perintah yang akan dieksekusi apabila kondisi yang didefinisikan adalah true",
          "-Pernyataan if - else",
          "-Pernyataan if - else if - else",
          "-Pernyataan switch"
        ]
      },
      {
        "title": "Pernyataan if - else",
        "content": [
          "-Pernyataan untuk mengecek bila suatu kondisi terjadi, maka akan melakukan sesuatu yang didefinisikan di dalam if",
          "-Apabila kondisi tersebut tidak terjadi, maka akan melakukan sesuatu yang didefinisikan di dalam else",
          "-Maksimum kondisi percabangan hanya bisa dua (if ... dan else ...)"
        ]
      },
      {
        "title": "Pernyataan if - else(ii)",
        "content": ["Notasi penulisan if - else"],
        "image": "/assets/image/alur-logika/image-js-1.png"
      },
      {
        "title": "Pernyataan if - else(iii)",
        "content": ["Notasi penulisan if - else"],
        "image": "/assets/image/alur-logika/image-js-2.png"
      },
      {
        "title": "Pernyataan if - else if - else",
        "content": [
          "-Pernyataan untuk mengecek bila suatu kondisi terjadi, maka akan melakukan sesuatu yang didefinisikan di dalam if",
          "-Apabila salah, maka akan mencoba untuk mengecek berdasarkan kondisi lainnya lagi di dalam else if",
          "-Apabila semua kondisi tersebut tidak terjadi, maka akan melakukan sesuatu yang didefinisikan di dalam else",
          "-Maksimum kondisi percabangan bisa banyak (if ... (1) else if ... (n) else ... (1))"
        ]
      },
      {
        "title": "Pernyataan if - else if - else(ii)",
        "content": ["Notasi penulisan if - else if - else"],
        "image": "/assets/image/alur-logika/image-js-3.png"
      },
      {
        "title": "Pernyataan if - else if - else(iii)",
        "content": ["Contoh penulisan if - else if - else"],
        "image": "/assets/image/alur-logika/image-js-4.png"
      },
      {
        "title": "Pernyataan switch",
        "content": [
          "-Cara lain dalam penulisan kondisi yang berbeda dari if else if else",
          "-Tidak baik digunakan apabila hanya ada 2 kondisi",
          "-Hati hati dengan penulisan case dan jangan lupa break untuk menghentikan *sleding*-an kode"
        ]
      },
      {
        "title": "Pernyataan switch (ii)",
        "content": ["-Notasi penulisan switch ... case ..."],
        "image": "/assets/image/alur-logika/image-js-5.png"
      },
      {
        "title": "Pernyataan switch (iii)",
        "content": ["-Contoh penulisan switch ... case ..."],
        "image": "/assets/image/alur-logika/image-js-6.png"
      },
      {
        "title": "Truthy x Falsy",
        "content": [
          "-Truthy adalah sebuah nilai yang akan dianggap benar apabila dikomparasikan dalam pernyataan Boolean",
          "-Falsy artinya kebalikan dari truthy, nilai yang akan dianggap salah bila dikomparasikan dalam pernyataan Boolean"
        ]
      },
      {
        "title": "Truthy x Falsy(ii)",
        "content": [""],
        "image": "/assets/image/alur-logika/image-js-7.png"
      },
      {
        "title": "Truthy x Falsy(iii)",
        "content": [
          "-if (Infinity) - truthy",
          "-if (Infinity === -Infinity) - falsy",
          "-if (0.5 + 0.1 === 0.6) - truthy",
          "if (0.1 + 0.2 === 0.3) - falsy",
          "if (0 == '0') - truthy"
        ]
      },
      {
        "title": "Iterasi dan Perulangan",
        "content": ["Misalnya kita punya kode yang seperti ini"],
        "image": "/assets/image/alur-logika/image-js-8.png"
      },
      {
        "title": "Iterasi dan Perulangan(ii)",
        "content": [
          "-Apa yang terjadi bila data dalam array ada 100?",
          "-Tangan kita akan keriting bukan menulisnya?"
        ]
      },
      {
        "title": "Iterasi dan Perulangan (iii)",
        "content": [
          "-Perulangan memberikan cara cepat dan mudah untuk melakukan sesuatu yang berpola berulang-ulang",
          "-Dalam javascript ada beberapa cara untuk menuliskan iterasi dan perulangan ini:",
          "*Perulangan for ...",
          "*Perulangan while ...",
          "*Perulangan break",
          "-Selalu berhati hati menuliskan perulangan agar tidak terjadi Infinite Loop"
        ]
      },
      {
        "title": "Perulangan for ...",
        "content": [
          "-Cara penulisan perulangan yang paling umum digunakan",
          "-Akan berulang terus sampai kondisi yang diberikan menjadi false"
        ]
      },
      {
        "title": "Perulangan for ... (ii)",
        "content": ["Notasi penulisan for ..."],
        "image": "/assets/image/alur-logika/image-js-9.png"
      },
      {
        "title": "Perulangan for ... (iii)",
        "content": ["Contoh penulisan for ..."],
        "image": "/assets/image/alur-logika/image-js-10.png"
      },
      {
        "title": "Perulangan while ...",
        "content": [
          "-Cara penulisan perulangan yang cukup umum digunakan",
          "-Perulangan yang akan terus dilakukan selama kondisi yang diberikan masih true"
        ]
      },
      {
        "title": "Perulangan while(ii)",
        "content": ["-Notasi perulangan while ..."],
        "image": "/assets/image/alur-logika/image-js-11.png"
      },
      {
        "title": "Perulangan while(iii)",
        "content": ["-contohperulangan while ..."],
        "image": "/assets/image/alur-logika/image-js-12.png"
      },
      {
        "title": "Perulangan break",
        "content": [
          "-Baik perulangan for ... maupun while ... bisa dihentikan di tengah-tengah",
          "-Bisa menggunakan break maupun continue",
          "-Yang diajarkan di sini adalah break saja",
          "-Cara menghentikan perulangan dengan menuliskan break; saja"
        ]
      },
      {
        "title": "Perulangan break (ii)",
        "content": ["Contoh penggunaan break"],
        "image": "/assets/image/alur-logika/image-js-13.png"
      },
      {
        "title": "FINISH",
        "content": ["QnA"]
      }
    ],
    "schedule": [
      {
        "day": "Kamis",
        "date": "7-11-2024",
        "time": "20:00 - 21:00"
      }
    ]
  },
  "javascript-fungsi": {
    "title": "JavaScript - Fungsi",
    "subjectUri": "javascript-fungsi",
    "slides": [
      {
        "title": "JavaScript - Fungsi",
        "content": [""]
      },
      {
        "title": "JavaScript - Fungsi",
        "content": [
          "-Intro Fungsi",
          "-Cara Penulisan Fungsi",
          "-Tantangan",
          "QNA"
        ]
      },
      {
        "title": "JavaScript - Fungsi",
        "content": ["-Mari kita lihat cuplikan kode berikut"],
        "image": "/assets/image/js-fungsi/img-js-1.png"
      },
      {
        "title": "JavaScript - Fungsi",
        "content": [
          "-Bayangkan bila kita memiliki 100 array yang harus ditulis",
          "-Perulangan yang harus kita tulis membuat tangan keriting bukan?"
        ]
      },
      {
        "title": "Intro Fungsi (ii)",
        "content": [
          "-Lalu solusinya bagaimana?",
          "-Salah satunya adalah dengan menggunakan fungsi (Function)"
        ]
      },
      {
        "title": "Intro Fungsi (iii)",
        "content": [
          "Fungsi adalah suatu cara untuk menuliskan kode yang bisa dipakai berulang-ulang sehingga membuat kode kita menjadi lebih DRY"
        ]
      },
      {
        "title": "DRY (Don't Repeat Yourself)",
        "content": [
          "-Prinsip dalam pemrograman yang bertujuan untuk mengurangi perulangan dari pola penulisan kode",
          "-Biasanya menggunakan suatu abstraksi atau normalisasi data",
          "-Diformulasikan oleh Andy Hunt dan Dave Thomas",
          "-Abstraksi yang akan dipelajari sekarang ini bernama Fungsi (Function)"
        ]
      },
      {
        "title": "Cara Penulisan Fungsi",
        "content": [
          "-Deklarasi Fungsi",
          "-Fungsi sebagai Ekspresi",
          "-Parameter dan Argumen",
          "-Arrow Function",
          "-IIFE"
        ]
      },
      {
        "title": "Deklarasi Fungsi",
        "content": [
          "-Fungsi dapat dideklarasikan dengan menggunakan keyword function"
        ],
        "image": "/assets/image/js-fungsi/img-js-2.png"
      },
      {
        "title": "Deklarasi Fungsi (ii)",
        "content": ["-Contoh Deklarasi Fungsi"],
        "image": "/assets/image/js-fungsi/img-js-3.png"
      },
      {
        "title": "Fungsi sebagai Ekspresi",
        "content": [
          "-Dalam js, fungsi adalah sebuah Object",
          "-Karena itu kita bisa memasukkannya ke dalam sebuah variabel"
        ]
      },
      {
        "title": "Fungsi sebagai Ekspresi (ii)",
        "content": ["-Notasi penulisan fungsi sebagai ekspresi"],
        "image": "/assets/image/js-fungsi/img-js-4.png"
      },
      {
        "title": "Fungsi sebagai Ekspresi (iii)",
        "content": ["-Contoh Fungsi sebagai eskpresi"],
        "image": "/assets/image/js-fungsi/img-js-5.png"
      },
      {
        "title": "Parameter dan Argumen",
        "content": [
          "-Loh, katanya fungsi itu demi DRY bukan?",
          "-Kita ambil contoh sebelumnya:",
          "-Bagaimana bila ternyata kita ingin mengubah angkanya?",
          "-Apakah kita harus membuat fungsi baru lagi?",
          "-Tydak!, kita bisa memanfaatkan parameter dan argumen."
        ]
      },
      {
        "title": "Parameter dan Argumen (ii)",
        "content": [
          "Parameter adalah nama variabel yang dilempar ke dalam suatu fungsi, sedangkan Argumen adalah nilai asli yang dimasukkan ke dalam fungsi"
        ]
      },
      {
        "title": "Parameter dan Argumen (iii)",
        "content": ["-Notasi Parameter dan Argumen"],
        "image": "/assets/image/js-fungsi/img-js-6.png"
      },
      {
        "title": "Parameter dan Argumen (iv)",
        "content": ["Contoh Parameter dan Argumen"],
        "image": "/assets/image/js-fungsi/img-js-7.png"
      },
      {
        "title": "Arrow Function",
        "content": [
          "-Diperkenalkan pada ES6",
          "-Cara penulisan fungsi yang lebih singkat dan 'modern'"
        ]
      },
      {
        "title": "Arrow Function(ii)",
        "content": ["Notasi arrow function"],
        "image": "/assets/image/js-fungsi/img-js-8.png"
      },
      {
        "title": "Arrow Function(iii)",
        "content": ["Notasi arrow function"],
        "image": "/assets/image/js-fungsi/img-js-9.png"
      },
      {
        "title": "IIFE",
        "content": [
          "-Immediately Invoked Function Expression",
          "-Cara menulis fungsi yang akan langsung dijalankan",
          "-Umumnya fungsi anonim yang langsung dibuat dan dijalankan",
          "-Bisa menggunakan deklarasi fungsi biasa ataupun arrow function"
        ]
      },
      {
        "title": "IIFE (ii)",
        "content": ["Notasi IIFE"],
        "image": "/assets/image/js-fungsi/img-js-10.png"
      },
      {
        "title": "IIFE (iii)",
        "content": ["Contoh IIFE"],
        "image": "/assets/image/js-fungsi/img-js-11.png"
      },
      {
        "title": "IIFE (iv)",
        "content": [
          "-Apa sih kegunaan dari IIFE?",
          "-Untuk menghindari polusi variabel global",
          "-Dipelajari Nanti Mengeksekusi fungsi async"
        ]
      },
      {
        "title": "FINISH",
        "content": ["QNA"]
      }
    ],
    "schedule": [
      {
        "day": "Minggu",
        "date": "17-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "javascript-callback": {
    "title": "JavaScript - Callback",
    "subjectUri": "javascript-callback",
    "slides": [
      {
        "title": "JavaScript - Callback",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": [
          "-Closures",
          "-Fungsi sebagai First Class Object",
          "-Intro Callback",
          "-Nested Callback"
        ]
      },
      {
        "title": "Closures",
        "content": ["Fungsi di dalam fungsi"],
        "image": "/assets/image/js-callback/img-js-1.png"
      },
      {
        "title": "Kok bisa?",
        "content": [
          "Sebuah fungsi di dalam javascript bisa mengembalikan sebuah fungsi lainnya?"
        ]
      },
      {
        "title": "Fungsi sebagai First Class Object",
        "content": [
          "-Dalam javascript, fungsi adalah first class object, atau objek 'kasta atas', artinya:",
          "-Fungsi bisa dimasukkan ke dalam variabel, object, ataupun array",
          "-Fungsi bisa dikembalikan (return) oleh fungsi lainnya",
          "-Fungsi bisa dijadikan sebuah argumen dalam fungsi lainnya"
        ]
      },
      {
        "title": "Intro Callback",
        "content": [
          "-Proses Synchronous dan Asynchronous",
          "-Apa itu Callback",
          "-Mari buat Callback"
        ]
      },
      {
        "title": "Proses Synchronous dan Asynchronous",
        "content": [
          "Dalam dunia pemrograman, ada 2 cara proses:",
          "-Synchronous (sync)",
          "-Asynchronous (async)"
        ]
      },
      {
        "title": "Proses Sync dan Async",
        "content": [
          "-Sync = eksekusi program yang akan menunggu proses sebelumnya selesai, sebelum prosesnya dijalankan (blocking)",
          "-Async = eksekusi program yang dapat berjalan tanpa menunggu proses sebelumnya selesai (non-blocking)"
        ]
      },
      {
        "title": "Proses Sync dan Async - Analogi",
        "content": [
          "Analoginya adalah order makanan: Drive-through vs Order restoran",
          "-Drive-through = dilayani secara berurutan (sequential), selama depan belum selesai, belakang akan menunggu",
          "-Order restoran = dapur akan buat beberapa bersamaan, tidak menunggu bahkan kadang bisa diserobot urutannya"
        ]
      },
      {
        "title": "Proses Sync dan Async - Contoh",
        "content": ["Apakah outputnya?"],
        "image": "/assets/image/js-callback/img-js-2.png"
      },
      {
        "title": "Fungsi sebagai First Class Object (Revisited)",
        "content": [
          "-Dalam javascript, fungsi adalah first class object, atau objek 'kasta atas', artinya:",
          "-Fungsi bisa dimasukkan ke dalam variabel, object, ataupun array",
          "-Fungsi bisa dikembalikan (return) oleh fungsi lainnya",
          "-Fungsi bisa dijadikan sebuah argumen dalam fungsi lainnya"
        ]
      },
      {
        "title": "Apa itu Callback",
        "content": [
          "Sebuah fungsi yang dijadikan sebuah argumen pada fungsi lainnya"
        ]
      },
      {
        "title": "Contoh Callback",
        "content": [
          "Misalnya saya punya beberapa pekerjaan yang harus dilakukan:",
          "-Menelpon pasangan karena bucin",
          "-Mengerjakan tugas tantangan",
          "-Cuci baju"
        ]
      },
      {
        "title": "Contoh Callback (ii)",
        "content": [
          "Kita coba lihat urutan kerjaannya:",
          "-Pada saat menelpon pasangan, ternyata adiknya yang angkat dan mengatakan bahwa si dia sedang mandi, dan saya diminta menunggu (hold) telepon",
          "-Saya tidak mau, dan titip pesan ke adiknya, kalau si dia udah kelar mandi, tolong kabari si dia untuk telepon ke saya yah"
        ]
      },
      {
        "title": "Contoh Callback (iii)",
        "content": [
          "-Sembari menunggu si dia menelpon balik, saya bisa mengerjakan tantangan atau cuci baju dulu",
          "-Ketika si dia selesai mandi dan menelepon, saya akan stop kerjaan saya sekarang, dan melepas rindu dengan si dia",
          "-Ini adalah salah satu contoh callback di dunia nyata"
        ]
      },
      {
        "title": "Contoh Callback (iv)",
        "content": [
          "Sedikit Catatan",
          "-Saya ini orangnya hanya bisa mengerjakan satu pekerjaan dalam satu waktu (single threaded)",
          "-Saya tidak bisa Kage bunshin no jutsu atau membelah diri untuk mengerjakan banyak hal dalam satu waktu",
          "-Tapi selagi menunggu pekerjaan yang lain selesai, saya bisa mengerjakan pekerjaan lainnya (async / non-blocking)"
        ]
      },
      {
        "title": "Kembali ke kode",
        "content": [
          "Di kode ini, fungsiKesatu akan dijalankan duluan sebelum fungsiKedua"
        ],
        "image": "/assets/image/js-callback/img-js-3.png"
      },
      {
        "title": "Kembali ke kode (ii)",
        "content": [
          "Mari kita pikirkan suatu hal",
          "-Apa yang akan terjadi bila si fungsiKesatu memiliki kode yang tidak bisa dijalankan dengan cepat?",
          "-Misalnya seperti:",
          "-membaca file yang jumlahnya sangat besar?",
          "-menunggu data dari tempat lain (api request)?",
          "-Mari kita coba simulasikan dengan setTimeout (fungsi bawaan javascript)"
        ]
      },
      {
        "title": "Kembali ke kode (iii)",
        "content": ["Mari coba kita lihat outputnya !"],
        "image": "/assets/image/js-callback/img-js-4.png"
      },
      {
        "title": "Kok bisa?",
        "content": [
          "-Pada kode, sebenarnya si fungsiKesatu berjalan duluan, hanya saja, tidak ditungguin sampai selesai, namun langsung ke fungsiKedua dulu",
          "-FungsiKesatu jalan (duluan) namun tidak ditunggu, kemudian fungsiKedua jalan (cetak 'dua') dan setelah fungsiKesatu selesai, dipanggil kembali dan cetak 'satu'"
        ]
      },
      {
        "title": "Bagaimana seandainya...",
        "content": [
          "-fungsiKesatu adalah proses yang tidak diketahui kapan selesainya",
          "-fungsiKedua adalah proses yang sequential seperti biasanya",
          "-Kita menginginkan: setelah fungsiKesatu selesai, baru boleh memanggil fungsiKedua?",
          "-Ya ! (salah satu) solusinya adalah dengan menggunakan callback !"
        ]
      },
      {
        "title": "Mari buat Callback (ii)",
        "content": [
          "Misalnya kita ingin membuat sebuah fungsi yang menerima array of number yang bisa melakukan pencarian angka ganjil saja"
        ]
      },
      {
        "title": "Mari buat Callback (iii)",
        "content": [""],
        "image": "/assets/image/js-callback/img-js-5.png"
      },
      {
        "title": "Mari buat Callback (iv)",
        "content": [
          "Sekarang kita ingin membuat fungsi pemilahAngka bisa melakukan pemilahan berdasarkan fungsi yang diberikan (callback)"
        ]
      },
      {
        "title": "Mari buat Callback (v)",
        "content": ["Sekarang mari kita melihat kode dengan callbacknya"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/9.)%20js-callback/callback1.js"
      },
      {
        "title": "Mari buat Callback (vi)",
        "content": ["Mari kita menyelesaikan kasus awal kita tadi !"],
        "image": "/assets/image/js-callback/img-js-6.png"
      },
      {
        "title": "Nested Callback",
        "content": ["Mirip dengan Looping, Callback juga bisa di-nestedkan"],
        "url": "https://github.com/ridhorayputraa/ngajar/blob/master/9.)%20js-callback/callback2.js"
      },
      {
        "title": "FINISH",
        "content": ["QNA"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "23-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "javascript-promise": {
    "title": "JavaScript - Promise",
    "subjectUri": "javascript-promise",
    "slides": [
      {
        "title": "JavaScript - Promise",
        "content": ["Sabar duluk"]
      }
    ],
    "schedule": [
      {
        "day": "Senin",
        "date": "25-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "pengenalan-react": {
    "title": "Pengenalan ReactJs",
    "subjectUri": "pengenalan-react",
    "slides": [
      {
        "title": "Pengenalan ReactJs",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": [
          "Apa saja yang akan dibahas?",
          "-Apa itu React",
          "-Inisialisasi React",
          "-Core Concept React",
          "-QnA"
        ]
      },
      {
        "title": "Apa itu React",
        "content": [
          "Sebelum kita masuk ke React...",
          "Ada baiknya kita mengetahui hal ini terlebih dahulu...",
          "Apakah itu Pemrograman secara Imperatif vs Deklaratif"
        ]
      },
      {
        "title": "Imperatif",
        "content": [
          "Mari kita analogikan: Pesan Pizza",
          "1.) Telepon Koki Pizza",
          "2.) Memberikan urutan membuat Pizza ke Kokinya secara Detail",
          "3.) Meminta Koki untuk membungkus Pizza dan memberikan ke Teller",
          "4.) Meminta Teller untuk memberikan ke delivery dan mengarahkan delivery sampai dengan tujuan",
          "5.) Menerima Pizza dan bayar"
        ]
      },
      {
        "title": "Deklaratif",
        "content": [
          "Mari kita analogikan: Pesan Pizza",
          "1.) Telpon Penjual Pizza, kasih Alamat",
          "2.) Duduk manis, menunggu, pizza tiba tiba sampai, bayar"
        ]
      },
      {
        "title": "Jadi React itu adalah...",
        "content": [
          "Sebuah Pustaka (Library) UI yang Deklaratif (ingat yah, BUKAN Framework)",
          "Kita bisa memberitahukan apa yang kita inginkan dari sisi UI ke React, dan React akan mikirin harus gimana untuk meng-update DOM-nya"
        ]
      },
      {
        "title": "Sejarah React",
        "content": [""],
        "image": "/assets/image/react/react-1.png"
      },
      {
        "title": "React Sangat Populer",
        "content": [
          "Perusahaan pengguna React",
          "-AirBNB",
          "-Netflix",
          "-Facebook",
          "-Instagram",
          "-Whatsapp",
          "-Paypal"
        ]
      },
      {
        "title": "Inisialisasi React",
        "content": [
          "Mari kita paste perintah berikut ke terminal ya !",
          "npm create vite@latest"
        ]
      },
      {
        "title": "Struktur Folder React Project",
        "content": [
          "Tempat menaruh dependency (package) eksternal dari project kita",
          "Ketika kita mengetik npm install maka package tersebut akan didownload dan diletakkan di sini"
        ],
        "image": "/assets/image/react/react-2.jpg"
      },
      {
        "title": "Struktur Folder React Project(ii)",
        "content": [
          "public",
          "Tempat menaruh file yang statik (index.html, pustaka javascript, gambar, dan aset lainnya)",
          "File yang diletakkan pada folder ini TIDAK AKAN diproses oleh Webpack",
          "(Webpack merupakan tools bundler dari project berbasis CRA)",
          "(bundler adalah tools untuk membuat kode kita menjadi lebih terstruktur dan kecil ketika dijalankan di production)"
        ]
      },
      {
        "title": "Struktur Folder React Project(iii)",
        "content": [
          "src",
          "Tempat menaruh file yang akan diproses oleh webpack",
          "mis: App.jsx / App.js yang memiliki file JSX harus diproses oleh webpack supaya bisa menjadi JavaScript biasa (istilahnya di-Transpile)",
          "App.js merupakan file komponen utama, dan index.js merupakan gerbang utama (entry point) untuk menjembatani html dengan aplikasi React yang dibuat"
        ]
      },
      {
        "title": "Struktur Folder React Project(iv)",
        "content": [
          "package.json & package_lock.json",
          "Berisi listing dari package / dependency yang dipasang pada node_modules",
          "Selain listing, berisi juga metadata dari project yang sedang dibuat",
          "package_lock.json berisi kunci untuk memastikan package yang akan didownload nantinya adalah sama dengan yang diinginkan"
        ]
      },
      {
        "title": "Yuk jalanin Aplikasi Reactnya",
        "content": ["npm run start"]
      },
      {
        "title": "Core Concept React",
        "content": [
          "Konsep Utama dalam React:",
          "JSX",
          "Komponen",
          "Props",
          "Render Kondisional (Conditional Rendering)",
          "State (Sneak Peek)"
        ]
      },
      {
        "title": "JSX",
        "content": ["Pada JSX, kita akan menuliskan HTML di dalam JS !"]
      },
      {
        "title": "JSX (ii)",
        "content": [
          "JSX (JavaSCript XML) membolehkan kita untuk menuliskan kode yang mirip XML untuk kepentingan simplisitas dan elegan, kemudian akan dikonversi (transpile) menjadi fungsi JS",
          "Terlihat seperti gabungan dari JavaScript dan HTML"
        ]
      },
      {
        "title": "Komponen",
        "content": [
          "Anggap saja Komponen itu adalah seperti blok LEGO, yang bisa digabungkan untuk membuat suatu struktur bangunan",
          "Modularitas seperti ini memperbolehkan kita untuk menambahkan, mengganti, ataupun menghancurkan komponen tanpa perlu menyentuh aplikasi / komponen lainnya",
          "Mari kita ngoding"
        ]
      },
      {
        "title": "Props",
        "content": [
          "kita bisa men-transfer data sebagai property ke dalam sebuah Komponen React",
          "Hal ini disebut dengan props",
          "Mari kita ngoding"
        ]
      },
      {
        "title": "Extra: Conditional Rendering",
        "content": [
          "Bagaimana bila sekarang kita ingin menggunakan props, tapi ingin memiliki default value (nilai default bila props tidak digunakan)?",
          "Salah satu solusinya adalah dengan menggunakan conditional rendering ini.",
          "Kunci utamanya adalah dengan menggunakan ternary operator",
          "kondisi ? exprJikaBenar : exprJikaSalah",
          "Mari kita ngoding"
        ]
      },
      {
        "title": "State",
        "content": ["Gambaran state"],
        "image": "/assets/image/react/react-3.png"
      },
      {
        "title": "State(ii)",
        "content": [
          "Dalam React, state adalah objek bawaan yang menyimpan data dan informasi tentang komponen",
          "State bersifat privat dan sepenuhnya dikendalikan oleh komponen. ",
          "State memungkinkan komponen untuk mengingat data dan merendernya sebagaimana mestinya. ",
          "Mari kita ngoding"
        ]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "react-component-ui-framework": {
    "title": "React Js - Component UI Famework",
    "subjectUri": "react-component-ui-framework",
    "slides": [
      {
        "title": "React Js - Component UI Famework",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": [
          "Apa saja yang akan dibahas?",
          "-Review React",
          "-Event Handler",
          "State",
          "QnA"
        ]
      },
      {
        "title": "Review React",
        "content": [
          "Mari kita nyoba bikin proyek React kembali yah !",
          "Kita akan coba untuk membuat aplikasi ToDoList dengan React.",
          "-Buka docs Vite React",
          "-Selanjutnya kita akan membuat Component ToDo List Sederhana terlebih dahulu",
          "-Buat dua file dengan nama",
          "*src/components/ToDoForm.jsx dan",
          "*src/components/ToDoList.jsx",
          "-Buka file index.js, comment bagian import index.css",
          "-Buka file App.js, comment bagian import logo dan import css",
          "-Selanjutnya kita akan menuliskan kode untuk ToDoForm.jsx terlebih dahulu yah"
        ]
      },
      {
        "title": "Review React (ii)",
        "content": ["Kode ToDoForm.jsx"],
        "image": "/assets/image/react-component/react-1.png"
      },
      {
        "title": "Review React (iii)",
        "content": ["Kode ToDoList.jsx"],
        "image": "/assets/image/react-component/react-2.png"
      },
      {
        "title": "Review React (iv)",
        "content": ["Kode App.js"],
        "image": "/assets/image/react-component/react-3.png"
      },
      {
        "title": "Review React (v)",
        "content": [
          "Untuk kode proyek ToDo tadi dapat dilihat di bawah yah.",
          "Nah masih ada yang terasa aneh dengan ToDo yang baru dibuat kan?",
          "Aplikasinya masih belum bisa baca data yang dikirimkan oleh user !",
          "Untuk bisa menyelesaikan ini, kita harus mengerti terlebih dahulu apa itu State dan Event Handler di React ini yah !"
        ],
        "url": "https://github.com/ridhorayputraa/react-component/tree/Todo1"
      },
      {
        "title": "Event Handler",
        "content": [
          "Contoh Event Handler",
          "-Bila ada sebuah button maka bisa memiliki event click",
          "-bila ada sebuah form maka bisa memiliki event submit",
          "-bila ada sebuah input maka bisa memiliki event change",
          "-bila ada sebuah select option maka juga bisa memiliki event change",
          "Pertanyaan sekarang: bagaimana cara menggunakannya pada React?",
          "Mari kita kembali ke proyek ToDo yang dibuat tadi"
        ]
      },
      {
        "title": "Event Handler(ii)",
        "content": ["Demo", "Buat file src/components/ToDoIncrement.jsx"],
        "image": "/assets/image/react-component/react-4.png"
      },
      {
        "title": "Event Handler(iii)",
        "content": ["Modifikasi file App.js"],
        "image": "/assets/image/react-component/react-5.png"
      },
      {
        "title": "Event Handler(iv)",
        "content": ["Modifikasi file ToDoIncrement.jsx"],
        "image": "/assets/image/react-component/react-6.png"
      },
      {
        "title": "Event Handler(v)",
        "content": [
          "Untuk kode proyek dapat dilihat di bawah yah.",
          "Mari kita coba analisis kode yang dibuat tadi:",
          "-Untuk dapat menggunakan event handler, kita membutuhkan sebuah fungsi yang digunakan untuk ditempelkan pada event handler",
          "-Untuk menempelkan fungsi, pada attribut yang menginginkan ada Event Handler, dapat menggunakan on<NamaEvent>, mis: onClick, onSubmit, dsb",
          "-Kita masih gagal untuk membuat data yang reaktif terhadap perubahan yang ada. Hal ini terjadi karena kita belum memahami dan menggunakan State"
        ],
        "url": "https://github.com/ridhorayputraa/react-component/tree/Todo2"
      },
      {
        "title": "State",
        "content": [
          "Dalam kasus Proyek ToDo yang dibuat sebelumnya, kita memiliki sebuah data dengan nama increment yang tidak reaktif (tidak berubah sesuai perubahan yang ada).",
          "Untuk itu kita harus mengetahui bagaimana cara menggunakan State terlebih dahulu agar bisa berbagi data",
          "State adalah suatu Object bawaan di dalam React yang digunakan untuk menampung data atau informasi dari suatu Komponen.",
          "State dari suatu komponen bisa berubah kapanpun, dan ketika hal itu terjadi, maka komponen akan di-render ulang.",
          "Berbeda dengan Props, yang digunakan untuk passing data ke komponen anak (children components), State digunakan untuk menyimpan data dari komponen yang nantinya harus dirender ke dalam tampilan yang ada."
        ]
      },
      {
        "title": "State(ii)",
        "content": [
          "Yuk sudah cukup ngomongin teorinya !",
          "Mari sekarang kita belajar cara menuliskan State",
          "Yuk kita lanjutkan untuk ToDoIncrement yang masih error yah !",
          "Tenang, untuk proyek ToDo Listing tadi akan dibahas setelah ini yah !"
        ]
      },
      {
        "title": "State - Demo",
        "content": ["Mari kita modifikasi lagi file ToDoIncrement.jsx"],
        "image": "/assets/image/react-component/react-7.png"
      },
      {
        "title": "State - Demo(ii)",
        "content": [
          "Untuk Kode final yang dibuat sebelumnya dapat dilihat di bwah yah",
          "Perlu diingat bahwa walaupun state mutable, selalu perlakukan state seperti immutable ! (jangan lakukan reassign, tapi gunakan method setter / replacernya) !",
          "Nah sekarang setelah mengetahui Event Handler dan State mari sekarang kita menyelesaikan ToDo List ini yah !"
        ],
        "url": "https://github.com/ridhorayputraa/react-component/tree/Todo3"
      },
      {
        "title": "Combination",
        "content": [
          "Sekarang kita akan menggabungkan yang sudah dipelajari pada minggu kemarin Props dengan materi yang baru dipelajari Event Handler dan State",
          "Pertama, kita harus mengetahui karena data todos ini akan digunakan oleh dua Komponen anak, maka kita harus menaruh State nya di Komponen Orang tuanya (Parent Component). hal ini umum disebut dengan istilah Lifting up the state",
          "Jadi mari buka kembali file App.js dan deklarasi state todos di App.js"
        ]
      },
      {
        "title": "Combination(ii)",
        "content": [
          "Deklarasi state todos di App.js",
          "Selanjutnya kita akan mendeklarasikan fungsi untuk menambah todos dan mendeklarasikan props pada Komponen anak di App.js"
        ],
        "image": "/assets/image/react-component/react-8.png"
      },
      {
        "title": "Combination(iii)",
        "content": [
          "Deklarasi fungsi untuk menambah todos dan deklarasi Props di App.js",
          "Selanjutnya kita akan memodifikasi kode pada komponen ToDoList untuk bisa membaca data dari state yang sudah dibuat di App.js"
        ],
        "image": "/assets/image/react-component/react-9.png"
      },
      {
        "title": "Combination(iv)",
        "content": [
          "Memodifikasi kode pada komponen ToDoList (file ToDoList.jsx)",
          "Selanjutnya, adalah bagian paling panjang dan terakhir, yaitu memodifikasi komponen ToDoForm"
        ],
        "image": "/assets/image/react-component/react-10.png"
      },
      {
        "title": "Combination(v)",
        "content": [
          "Memodifikasi kode pada komponen ToDoForm (file ToDoForm.jsx)"
        ],
        "image": "/assets/image/react-component/react-11.png"
      },
      {
        "title": "Combination(vi)",
        "content": [
          "Memodifikasi kode pada komponen ToDoForm (file ToDoForm.jsx)",
          "S-E-L-E-S-A-I ! sampai pada tahap ini Proyek ToDoList kita sudah selesai !"
        ],
        "image": "/assets/image/react-component/react-12.png"
      },
      {
        "title": "Combination - Recap",
        "content": [
          "Cukup panjang yah kodenya ! selamat datang ke dunia React !",
          "Sampai di sini artinya kita sudah mempelajari:",
          "-Pembuatan Component",
          "-Penggunaan Props",
          "-Penggunaan Event Handler",
          "-Penggunaan State",
          "Selanjutnya kita harus memantapkan dari materi yang didapatkan lagi yah !"
        ],
        "url": "https://github.com/ridhorayputraa/react-component/tree/TodoFinal"
      },
      {
        "title": "QnA",
        "content": [""]
      },
      {
        "title": "Tugas",
        "content": ["-Buatkan 1 inputan nama dan nama nya harus terupdate"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "react-component-ui-framework-2": {
    "title": "React Js - Component UI Famework 2",
    "subjectUri": "react-component-ui-framework-2",
    "slides": [
      {
        "title": "React Js - Component UI Famework 2",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": [
          "Apa saja yang akan dibahas?",
          "-Review React",
          "-UI Component Library",
          "-QnA"
        ]
      },
      {
        "title": "Review React",
        "content": [
          "Yuk kita mengingat lagi tentang pembuatan ToDoList kemarin yah",
          "Bagaimana bila seandainya sekarang kita ingin membuat ToDoList dalam bentuk sebuah tabel ?",
          "Mari kita coba untuk membuatnya yah"
        ]
      },
      {
        "title": "Review React(ii)",
        "content": [
          "-Membuat projectnya kembali dengan menggunakan npx create-react-app nama-project-yang-diinginkan",
          "-Memodifikasi file src/index.js dan meng-komen bagian import css",
          "-Memodifikasi file src/App.js dan meng-komen seluruh import serta mengosongkan return dari function app (sehingga hanya tersisa div className=App) saja",
          "-Membuat folder pada src dengan nama components",
          "-Membuat dua buah file dengan nama ToDoForm.jsx dan ToDoTable.jsx pada folder src/components",
          "-Membuat folder pada src dengan nama containers",
          "-Membuat file ToDo.jsx pada folder src/containers",
          "-Selanjutnya kita akan memulai untuk menuliskan kode, dimulai dari file ToDo.jsx"
        ]
      },
      {
        "title": "Review React(iii)",
        "content": [
          "File ToDo.jsx",
          "Apabila saat di save keluar warning di linter, abaikan terlebih dahulu yah !",
          "Selanjutnya kita akan memodifikasi file App.js untuk menampilkan containers ToDo"
        ],
        "image": "/assets/image/react-component-2/react-1.png"
      },
      {
        "title": "Review React(iv)",
        "content": [
          "File App.jsx",
          "Selanjutnya kita akan mulai untuk membuat component ToDoForm"
        ],
        "image": "/assets/image/react-component-2/react-2.png"
      },
      {
        "title": "Review React(v)",
        "content": ["File ToDoForm.jsx"],
        "image": "/assets/image/react-component-2/react-3.png"
      },
      {
        "title": "Review React(vi)",
        "content": [
          "Wah kode kita sudah mulai panjang yah !",
          "Ya, memang seperti inilah bila sudah masuk ke React yah, harus menerima sikon yang seperti ini !",
          "Selanjutnya kita akan mulai membuat component ToDoTable yah !"
        ]
      },
      {
        "title": "Review React(vii)",
        "content": ["File ToDoTable.jsx"],
        "image": "/assets/image/react-component-2/react-4.png"
      },
      {
        "title": "Review React(viii)",
        "content": [
          "Selanjutnya kita akan modifikasi file ToDo.jsx kembali, untuk menambahkan ToDoForm dan ToDoTable",
          "Sekarang kita akan membuat logic untuk menambahkan data todos ke dalam tabel apabila tombol Tambah kerjaan ditekan !"
        ],
        "image": "/assets/image/react-component-2/react-5.png"
      },
      {
        "title": "Review React(ix)",
        "content": [
          "File ToDo.jsx",
          "Selanjutnya kita akan modifikasi component ToDoForm"
        ],
        "image": "/assets/image/react-component-2/react-6.png"
      },
      {
        "title": "Review React(x)",
        "content": [
          "File ToDoForm.jsx",
          "Sampai di titik ini artinya kita sudah selesai untuk membuat penambahan data todos ke dalam tabel !",
          "Selanjutnya kita akan membuat logic untuk menyelesaikan todos yang sudah dibuat !",
          "Apabila tombol selesaikan dalam tiap baris data ditekan, maka akan membuat data isCompleted menjadi true",
          "Mari kita mulai dari modifikasi container ToDo"
        ],
        "image": "/assets/image/react-component-2/react-7.png"
      },
      {
        "title": "Review React(xi)",
        "content": [
          "File ToDo.jsx",
          "Selanjutnya, modifikasi component ToDoTable untuk menyelesaikan todos yang sudah dibuat !"
        ],
        "image": "/assets/image/react-component-2/react-8.png"
      },
      {
        "title": "Review React(xii)",
        "content": [
          "File ToDoTable.jsx",
          "Sampai di sini artinya kita sudah menyelesaikan semuanya !"
        ],
        "image": "/assets/image/react-component-2/react-9.png"
      },
      {
        "title": "Review React(xiii)",
        "content": [
          "Wah ternyata panjang yah !",
          "Tenang... kalau sudah bekerja pastinya lebih panjang dari ini kok !",
          "Tapi, ngomong-ngomong soal kerja, ini masih ada yang kurang loh...",
          "Ya ! kita belum melakukan styling agar component kita menjadi lebih baik !",
          "Untuk bisa melakukan styling terhadap component sebenarnya kita bisa saja melakukannya secara manual",
          "Tapi bagaimana bila ternyata sudah ada yang mau berbaik hati membuatkan styling-nya, bahkan sampai sudah membuatkannya dalam bentuk Component-based ?",
          "Yuk, tanpa bak bik buk, kita coba melihatnya !"
        ]
      },
      {
        "title": "UI Component Library",
        "content": [
          "UI Component Library umumnya adalah sekumpulan UI Component yang sudah siap digunakan untuk membuat sebuah aplikasi web.",
          "Contoh Component, e.g.: Button, Input, Dialog, dsb",
          "Dibuat sebagai library untuk membangun tampilan yang baik dan konsisten !",
          "Contoh UI Component Library untuk React adalah:",
          "-React Bootstrap",
          "-Ant Design",
          "-MUI (Material-UI)",
          "-Dan masih banyak lainnya lagi...",
          "Yang akan kita gunakan pada pembelajaran ini adalah MUI"
        ]
      },
      {
        "title": "UI Component Library(ii)",
        "content": [
          "MUI adalah UI Component Library yang didesain berdasarkan Material Design yang dibuat oleh Google.",
          "Punya tampilan yang Google-alike, sehingga cukup cocok untuk tampilan mobile based (dan juga) secara visual akan cocok untuk tampilan desktop based.",
          "Akan tetapi, bila nantinya tidak dicustom dengan baik, akan dikira sebagai aplikasi yang jadi produknya Google !",
          "Yuk kita langsung buka MUI dan mulai belajar menggunakannya !",
          "Tautan untuk penggunaan MUI bisa dibuka di bawah"
        ],
        "url": "https://mui.com/material-ui/getting-started/installation/"
      },
      {
        "title": "UI Component Library(iii)",
        "content": [
          "Mari kita kembali lagi ke project ToDo yang kita buat tadi",
          "Sekarang kita akan menambahkan UI Library MUI ke dalam project yang sudah kita buat",
          "Untuk menambahkannya kita bisa menggunakan perintah yang ada di docs"
        ]
      },
      {
        "title": "UI Component Library(iv)",
        "content": [
          "Kita mulai dari file ToDoForm.jsx, dan menambahkan component Button MUI untuk menggantikan button standar yang kita buat sebelumnya",
          "Perhatikan di sini ada attribute baru dengan nama variant dan size, ini merupakan attribute tambahan dari Button MUI."
        ],
        "image": "/assets/image/react-component-2/react-10.png"
      },
      {
        "title": "UI Component Library(v)",
        "content": ["File ToDoForm.jsx"],
        "image": "/assets/image/react-component-2/react-11.png"
      },
      {
        "title": "UI Component Library(vi)",
        "content": ["File ToDo.jsx"],
        "image": "/assets/image/react-component-2/react-12.png"
      },
      {
        "title": "UI Component Library (vii)",
        "content": [
          "Wah panjang sekali yah kodenya?",
          "Tenang, projekan biasanya lebih dari ini kok !",
          "Bagi yang tertinggal mengikuti materi ini, atau males mau langsung liat akhirnya aja, bisa ngintip kode finalnya di bawah !"
        ],
        "url": "https://github.com/ridhorayputraa/react-component-2"
      },
      {
        "title": "FINISH",
        "content": ["QnA"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "react-navigasi": {
    "title": "React Js - Navigasi",
    "subjectUri": "react-navigasi",
    "slides": [
      {
        "title": "React Js - Navigasi",
        "content": [""]
      },
      {
        "title": "React Router",
        "content": [
          "Dikutip dari situsnya langsung, React Router adalah sebuah library lengkap pada server-side dan client-side untuk Routing / Navigasi pada React.",
          "Yang akan kita pelajari di sini adalah React Router yang digunakan untuk React pada client-side (client-side routing) yah !",
          "Yuk sekarang kita coba melihat cara menggunakan React Router !"
        ]
      },
      {
        "title": "React Router - Demo",
        "content": ["Demo tonton videonya ya yang mengenai react router"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "react-list-axios": {
    "title": "React Js - List & Axios",
    "subjectUri": "react-list-axios",
    "slides": [
      {
        "title": "React Js - List & Axios",
        "content": [""]
      },
      {
        "title": "Agenda",
        "content": ["-List", "-API", "-Axios", "-QnA"]
      },
      {
        "title": "List",
        "content": [
          "Yuk sekarang kita coba untuk membuat Listing Movie yang cuakep",
          "-Untuk awalnya sekarang ini kita akan menggunakan data dari file JSON terlebih dahulu yah",
          "-Data JSON dapat diambil di Bawah yah"
        ],
        "url": "https://github.com/ridhorayputraa/react-list-axios/blob/master/src/data/movies.json"
      },
      {
        "title": "List - Demo",
        "content": [
          "Langkah pembuatan list dalam demo ini adalah:",
          "-Buat file src/data/movies.json",
          "-Copy paste isi dari JSON yang diberikan di atas pada file movies.json",
          "-Buat Card yang akan menampilkan gambar poster, judul film, rating, dan overview",
          "-Buka dokumentasi yang ada pada MUI tentang card di sini",
          "-Buat file src/containers/ListMovies.css, file ini akan berisi file CSS yang kita inginkan untuk membuat Listing dari Film yang ingin kita buat",
          "-Buat file src/containers/ListMovies.jsx, file ini akan berisi Component ListMovies yang digunakan untuk menampilkan keseluruhan data yang kita inginkan",
          "-Modifikasi file App.js untuk menampilkan Component ListMovies yang kita buat sebelumnya",
          "-Buat file src/components/CardMovie.jsx, file ini akan berisi Component 'satuan' untuk setiap Movie yang akan dibaca dari ListMovies (Poster, Judul Film, dst ditampilkan di sini)"
        ]
      },
      {
        "title": "List - Demo (ii)",
        "content": [
          "-Modifikasi file src/containers/ListMovies.jsx untuk menampilkan Component `CardMovie` yang kita buat sebelumnya",
          "-Sampai pada titik ini kita sudah berhasil menampilkan data JSON, tapi hanya satu saja... dan ada satu masalah lagi, yaitu gambarnya belum nampak loh ! Ya, ini karena data image tersebut kita ambil dari posisi yang salah. Untuk gambar sebenarnya ini diambil dari TMDB (yang akan dibahas nanti) yang semua imagenya harus ada prefix (awalan), yaitu https://image.tmdb.org/t/p/w200. Nah sekarang kita akan memodifikasi hal tersebut pada file CardMovie.jsx yah",
          "-Yak sampai di titik ini, seharusnya gambar sudah muncul, tapi hanya satu saja yang muncul. Bagaimana bila kita ingin menampilkan CardMovie yang berisi 3 data terakhir dari JSON yang kita miliki sekarang ini? Mari kita modifikasi file ListMovies.jsx.",
          "-Voila ! Sampai di titik ini kita sudah berhasil melakukan pemetaan yang dinamis yah terhadap data yang kita miliki.",
          "-Kode akhir dapat dilihat dibawah yah"
        ],
        "url": "https://github.com/ridhorayputraa/react-list-axios/tree/adding-list-component"
      },
      {
        "title": "List - Demo (iii)",
        "content": [
          "Secara singkatnya langkah yang dilakukan tadi adalah:",
          "Ambil data JSON dengan cara",
          "-import data from /path/to/data.json",
          "Buat Component CardMovie yang akan menampung satuan data Movie",
          "Map data JSON yang kita miliki ke dalam Component CardMovie",
          "Passing data dari map tersebut ke dalam Component CardMovie via Props"
        ]
      },
      {
        "title": "List - Conclusion",
        "content": [
          "Nah sampai di sini kita sudah berhasil membuat Listing Movie berdasarkan data internal JSON yang dimiliki oleh aplikasi",
          "Sekarang, bagaimanakah bila kita ingin mengkonsumsi data yang disediakan oleh penyedia data yang ada di internet?",
          "Ingat yah, kata kuncinya adalah PENYEDIA, artinya harus ada yang menyediakan data tersebut. (Bukan sembarang ambil / mencuri data, itu tekniknya berbeda lagi)",
          "Untuk itu, mari kita coba belajar tentang API terlebih dahulu yah"
        ]
      },
      {
        "title": "API",
        "content": [
          "Apa itu API?",
          "-API, kependekan dari Application Programming Interface, adalah suatu penengah dari perangkat lunak software intermediary yang memperbolehkan beberapa aplikasi untuk berinteraksi satu sama lain.",
          "-API itu ada banyak sekali bentuk (dan protokol) yang digunakan. Namun yang akan kita fokuskan di sini adalah REST API"
        ]
      },
      {
        "title": "API - Analogi",
        "content": [""],
        "image": "/assets/image/react-list-api/react-1.png"
      },
      {
        "title": "REST API - Apa Itu ?",
        "content": [
          "REST API adalah suatu tipe API yang berkomunikasi via HTTP request untuk melakukan suatu fungsi dasar basis data / database seperti CREATE, READ, UPDATE, DELETE data (sering disebut juga sebagai CRUD)",
          "HTTP Method yang digunakan untuk request adalah umumnya sebagai berikut:",
          "-GET, ekuivalen dengan READ",
          "-POST, ekuivalen dengan CREATE",
          "-PUT, ekuivalen dengan UPDATE",
          "-DELETE, ekuivalen dengan DELETE",
          "dll.."
        ]
      },
      {
        "title": "REST API - Apa Itu ? (ii)",
        "content": [
          "Mari kita coba lihat gambar berikut yang menyatakan REST API"
        ],
        "image": "/assets/image/react-list-api/react-2.png"
      },
      {
        "title": "Postman",
        "content": [
          "Dikutik dari web Postman, ini adalah sebuah Platform API untuk membangun dan menggunakan API.",
          "Dengan menggunakan Postman ini, kita bisa me-nembak API yang ingin kita coba gunakan dengan HTTP Method tertentu dan dengan data (request) tertentu, untuk mendapatkan data kembalian (response) sesuai dengan ketentuan output dari API penyedia data.",
          "Postman ini dapat digunakan dengan cara install (berupa program) ataupun dengan menggunakan web Postman langsung (dengan limitasi).",
          "Namun untuk menggunakannya caranya sama: HARUS memiliki akun Postman.",
          "Nah setelah membuat akun, mari kita coba untuk mengkonsumsi API pertama kita yah !"
        ]
      },
      {
        "title": "Konsumsi API dengan Postman",
        "content": [
          "API itu bentuknya umumnya ada 3:",
          "-Bebas (Public) terbuka (bisa langsung digunakan tanpa perlu embel embel apapun)",
          "-Bebas (Public) terproteksi (harus menggunakan tanda pengenal berupa kunci / token)",
          "-Internal (Private), hanya untuk konsumsi internal suatu perusahaan saja",
          "Pada pembelajaran ini kita akan menggunakan API yang Bebas Terproteksi untuk mengambil data film, yaitu dari TheMovieDataBase (TMDB)",
          "Bikin akun baru pada TMDB",
          "Buka pada bagian Settings, lalu API, untuk mendapatkan API Key (v3 Auth). Anggap ini sebagai password untuk bisa mengakses API"
        ]
      },
      {
        "title": "Konsumsi API dengan Postman - Dokumentasi",
        "content": ["Click link yang dibawah yah"],
        "url": "https://developer.themoviedb.org/docs/getting-started"
      },
      {
        "title": "Konsumsi API dengan Postman (ii)",
        "content": [
          "Setelah kita mendapatkan key, maka kita bisa mencoba untuk me-nembak API TMDB yang kira kira bentuknya seperti ini (Ganti <<api_key>> dengan key yang kita dapatkan):)",
          "https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>",
          "Untuk me-nembak Endpoint API TMDB ini kita akan menggunakan Postman (sesuai gambar di bawah), dan tekan tombol Send untuk melihat hasil kembalian dari API TMDB"
        ],
        "image": "/assets/image/react-list-api/react-3.png"
      },
      {
        "title": "Konsumsi API dengan Postman (iii)",
        "content": [
          "Untuk Endpoint yang akan digunakan untuk pembelajaran ini adalah GET /movie/popular",
          "Mari kita coba untuk mengkonsumsi Endpoint API TMDB ini dengan menggunakan Postman",
          "Nah setelah berhasil kita coba untuk mengambil data ini, tentunya sekarang kita akan memiliki pertanyaan donk:",
          "-Bagaimanakah cara kita menggunakan data ini ke dalam aplikasi React yang kita buat?",
          "Untuk menjawab itu, mari kita belajar tentang axios terlebih dahulu yah !"
        ]
      },
      {
        "title": "Axios",
        "content": [
          "Nah dari tadi kita mencoba untuk melakukan Komunikasi dengan server penyedia API via HTTP Protocol bukan?",
          "Axios adalah Library Javascript yang bisa kita gunakan untuk melakukan komunikasi dengan server penyedia API. (HTTP Request) dan sudah berbasis Promise"
        ]
      },
      {
        "title": "Axios - How To ?",
        "content": ["Cara menggunakan axios"],
        "image": "/assets/image/react-list-api/react-4.png"
      },
      {
        "title": "Axios - How To ? (ii)",
        "content": ["Axios Method Aliases"],
        "image": "/assets/image/react-list-api/react-5.png"
      },
      {
        "title": "Axios - How To ? (iii)",
        "content": [
          "Axios Response Schema (Hasil kembalian / response yang dibuat oleh axios)"
        ],
        "image": "/assets/image/react-list-api/react-6.png"
      },
      {
        "title": "Axios - Demo",
        "content": [
          "Mari kita coba untuk mengubah kode sebelumnya menjadi data asli dari TMDB dengan menggunakan Axios",
          "Adapun langkah pengerjaannya adalah sebagai berikut:",
          "-Install axios dengan npm install axios",
          "-Buat container baru dengan nama ListMoviesReal.jsx",
          "-Masukkan Kode untuk membuat ListMoviesReal.jsx dengan axios dan useEffect",
          "-Modifikasi App.js untuk menerima Container ListMoviesReal.jsx",
          "-PS: Kita tidak perlu memodifikasi CardMovie lagi walaupun kita pakai di 2 tempat yang berbeda !",
          "-PS2: Terima kasih sistem Component !"
        ],
        "url": "https://github.com/ridhorayputraa/react-list-axios/tree/using-axios-fetch-data"
      },
      {
        "title": "Axios - Demo (ii)",
        "content": [
          "Sampai di sini kita sudah berhasil menarik data dari API TMDB",
          "Tapi... di sini kita berasa ada yang janggal bukan?",
          "Apa yang terjadi, seandainya kita punya banyak tarikan data dari TMDB?",
          "Pastinya akan ada banyak sekali perulangan terhadap string URL yang dibuat bukan?",
          "Bagaimana cara kita mengakalinya?",
          "Salah satunya adalah dengan menggunkana axios Instance"
        ]
      },
      {
        "title": "Axios - Instance",
        "content": [
          "Cara untuk membuat suatu instance axios dengan konfigurasi tertentu agar kode tidak berulang",
          "Contoh penulisan kode dengan axios instance:"
        ],
        "image": "/assets/image/react-list-api/react-7.png"
      },
      {
        "title": "Axios - Instance (Demo)",
        "content": [
          "Mari kita coba untuk mengubah kode kita dengan menggunakan axios instance:",
          "-Buat sebuah file /src/apis/tmdb.js",
          "-Masukkan kode axios instance pada tmdb.js",
          "-Ubah file /src/containers/ListMovieReal.jsx untuk melakukan import dari /src/apis/tmdb.js, bukan dari axios langsung lagi"
        ],
        "url": "https://github.com/ridhorayputraa/react-list-axios/tree/axios-instance"
      },
      {
        "title": "Conclusion",
        "content": [
          "Nah sampai di titik ini artinya kita sudah berhasil menggunakan Axios untuk bisa me-nembak data dari REST API pihak ketiga bernama TMDB.",
          "Selamat belajar !"
        ]
      },
      {
        "title": "FINISH",
        "content": ["QnA"]
      },
      {
        "title": "Tugas",
        "content": ["Buat landing page kalian sendiri ya dengan minimal 3 page"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  },
  "react-deployment": {
    "title": "React Js - Deployment",
    "subjectUri": "react-deployment",
    "slides": [
      {
        "title": "React Js - Deployment",
        "content": ["Sabar duluk"]
      }
    ],
    "schedule": [
      {
        "day": "Sabtu",
        "date": "30-11-2024",
        "time": "13:30 - 15:00"
      }
    ]
  }
}
